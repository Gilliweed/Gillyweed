import styled from "styled-components";
import moreProduct from "../CardsData/MoreProductsData";
import Product from "./ProductCard";
import ProductList from "../../../ShopPages/MoreProductList";
import { useState, useEffect } from "react";
import axios from "axios";
import { Value } from "sass";

const Container = styled.div`
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
`;

const Products = ({ cat, filters, sort }) => {
  const [products, setProducts] = useState([]);

  const [filteredProducts, setFilteredProducts] = useState([]);
  useEffect(() => {
    const getProducts = async () => {
      try {
        const res = await axios.get(
   
             "http://localhost:5000/api/products"
        );
        setProducts(res.data);
        console.log(res.data);
      
      } catch (err) {}
    };
    getProducts();
    // console.log("get products", myres);
  }, []);
  
  // useEffect(() => {
  //   cat &&
  //     setFilteredProducts(
  //       products.filter((item) =>
  //         Object.entries(filters).every(([key, value]) =>
  //           item[key].includes(value)
  //         )
  //       )
  //     );
  // }, [products, cat, filters]);

  // useEffect(() => {
  //   if (sort === "newest") {
  //     setFilteredProducts((prev) =>
  //       [...prev].sort((a, b) => b.createdAt - a.createdAt)
  //     );
  //   } else if (sort === "asc") {
  //     setFilteredProducts((prev) =>
  //       [...prev].sort((a, b) => a.price - b.price)
  //     );
  //   } else if (sort === "dec") {
  //     setFilteredProducts((prev) =>
  //       [...prev].sort((a, b) => b.price - a.price)
  //     );
  //   }
  // }, [sort]);
  // console.log("here res i", res);
  return (
    <Container>
      {/* {cat
        ? products.map((item) => <Product item={item} key={item.id} />)
        : products
            .slice(0, 8)
            .map((item) => (
              <Product
                img={item.img}
                title={item.title}
                price={item.price}
                desc={item.desc}
              />
            ))} */}
      {products.map((MoreProductsData) => (
        <Product
          img={MoreProductsData.img}
          title={MoreProductsData.title}
          price={MoreProductsData.price}
          desc={MoreProductsData.desc}
        />
      ))}
    </Container>
  );
};










{cat
        ? filteredProducts.map((item) => <Product item={item} key={item.id} />)
        : products
            .slice(0, 8)
            .map((item) => <Product item={item} key={item.id} />)}